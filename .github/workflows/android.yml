name: Android app

env:
  # The name of the main module repository
  main_project_module: app
  playstore_name: Google_Play
on:
  push:
    branches: [main]
jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt 
      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEY_PASSWORD}#/${{ secrets.KEY_PASSWORD }}/g' app/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{STORE_PASSWORD}#/${{ secrets.STORE_PASSWORD }}/g' app/key.properties
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: gradle/actions/setup-gradle@v3
        with:
          channel: "beta"
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: debug the gradle
        run: ./gradlew signingReport
      - name: Build with Gradle
        run: ./gradlew build
      - name: make a folder for download
        run:  mkdir -p app/build/outputs/bundle/release/
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease
      - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/
      # - name: Create a Release in GitHub
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/release/app-release.aab"
      #     token: ${{ secrets.GIT_TOKEN }}
      #     tag: ${{ steps.version.outputs.content }}
      #     commit: ${{ github.sha }}
      # - name: Upload app bundle
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: appbundle
      #     path: build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.app.package_name
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: alpha
          status: completed
